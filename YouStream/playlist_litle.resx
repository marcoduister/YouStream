<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button_refresh_playlist.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAA61JREFUeF7t
        2s1uHEUAhVGvCBK8FzwqSxAIiR0/D8USqtzHEuLaQ814Ym6P6kijRPm6OnfKWeZp27Zt27Zt27ZtewB/
        PShfr5+9D8fX62fvw/H1+tn7cHy9fvY+HF+vn70Px9frZ2+Q65kb5H72BrmeuUHuZ2+Q65kb5H72Brme
        uUHuZ2+Q65kb5H72BrmeuUHuZ2+Q65kb5H72BrmeuUHuZ2+Q65kb5H72BrmeuUHuZ2+Q65kb5H72Brme
        uUHuZ2+Q65kb5H72BrmeuUHuZ2+Q65kb5H72BrmeuUHuZ2+Q65kb5H72BrmeuUHuZ2+Q65kb5H72Brme
        uUHuZ2+Q65kb5H72BrmeuUHuZ2+Q65kb5H72BrmeuUHuZ2+Q65kb5H72BrmeuUHuZ2+Q65kb5H72Brme
        uUHuZ2+Q65kb5H72BrmeuUHuZ2+Q65kb5H72BrmeuUHuZ2+Q65kb5H72BrmeuUHuZ2+Q65kb5H72Brme
        uUHuZ2+QL/LoXXn1MseC3M/eIF/k0bvy6mWOBbmfvUG+yKN35dXLHAtyP3uDfJFH78qrlzkW5H72Bvki
        j96VVy9zLMj97A3yRR69K69e5liQ+9kb5Hcbr/p6fH57fukCx5Y5FuR+9gb5XcZrrrr8ydFljgW5n71B
        vtl4xdWXPzm+zLEg97M3yDcZx2+6/MkrljkW5H72Bvlq4+jK5f/g1+A1yxwLcj97g3yVcWz18r84fpu8
        apljQe5nb5CXjSPz8n9/Pvy258v3/KueX3YFx4Lcz94gLxmPX3X50/FHSV7mWJD72Rvk/zQevfryp+OP
        k7zMsSD3szfIF43Hbrr86UhJXuZYkPvZG+Q3jUduvvzpyEle5liQ+9n7b7/Krxr9XZc/HY8keZljQe5n
        7z/9ND6f5DDauy9/Oh5L8jLHgtzP3hcfcvnT8WiSlzkW5H72Th92+dPxeJKXORbkfvZ+6OXf0/FXJ7nf
        2Hray5+Ovz7J/cbWr/w2jFZ9+dMxIcnnNb7DyuV/Pz7/2+VPx4wkn9PYf4rLn44pST6fsf00lz8dc5J8
        LmP3qS5/OiYl+TzG5tNd/nTMSvI5jL2nvPzpmJbkfmPruy9/tE/j8/N8sIVp3cbOe1z+fMdN/wPiczKv
        19g4L+6P57VvO+XlTyb2Ght/PKa+6Zfx+dLjYbTay5/M7DU2fjM+fz6vTaf9l//C1G5j52s/hNNf/mRu
        v7H12/F5+SFcvPztMxmXPn8I3+3L37Zt27Zt27YyT09/A9CwOBiiWDkUAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="button_play.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGgAAABoCAYAAAAdHLWhAAAABGdBTUEAALGPC/xhBQAAA49JREFUeF7t
        nblrVFEUxk+nhaKFa+GK+4a7rUttZ2tnZSMIYptGmcyqgoWNYMp0olWmtbLz3xCEGI2K2/W73HNxfDhk
        MnnLXb4ffLxikjfnnB935pF5cyOEEEIIIYQQQgghhBBCCCGEEEIIIbFh2nLadOW26ch9HG+aWdmoD5Em
        MU9kK4S8RkwhS8gDZIv+KKkbMyPrIeCdChmXT6YnLStSf43UBQZ/9z9CxuUz0sZL4Db9dVI1GPjbEQGT
        xorqmkeyXU9DqgKr4X1h+JOnJ8s49nFxsUNPR8oGA178Z+jT5TsyZ/pyQE9LygKDLUOQjxPVloN6erJW
        MNAyBflQVFlgkFUI8vmFzOO96pA+HVktGGCVgnycqFk5rE9LJgWDq0OQjxPVlSP69GQlMKw6Bfk4UQM5
        qmWQcWBQTQjysaJe4T3qjJZDimBATQrycaLaclbLIh4MJgRBPr8RihoFAwlJkI8T1ZVzWma+YAghCvJx
        ovpyXsvNDwwgZEGjGSIXtOx8QNOxCPIZYkVd1PLTBw3HJshnaDpySdtIFzQaqyCXnryBqMvaTnqgybgF
        +VhRPbmibaUDmktDkI9bUVe1vfhBU2kJ8nEr6pq2GS9oJk1BPm5FXdd24wNNpC3IJ1ZRKD4PQX+zAFnx
        fMKLgnMTZFfTcjQXEig4P0EuH0xLNukYwgWF5irI5o6OIVxQZL6COvJCxxAuKDTnFfRcxxAuKJIvcSGD
        IvO9SBjIZh1DuKDQHAV9iebPQCg2N0ELUd3hioJzEGTvbZjHVdspbTseUHjKguz9dvZ7Sye13fhAAykK
        +onMYcWc0DbjBY2kJMiJ6ctxbS9+0FAKgpyYrhzTttIBTcUsyIlJ+VsSaDBGQT+QZxCzX9tIFzQakyAn
        piP7tPz0QcMxCMpPjAeNhyzIflvcvpTt1XLzAwMIUdA305PHOO7RMvMFQwhJ0FeKKYBhhCDIiWnJbi2L
        eDCcJgU5MT3ZpeWQIhhSE4Ls5zEtbmc2ARhWnYKcGG4IODkYWvWC7I2CFDMdGGB1grwY7nU6PRhkFYI+
        YrXMUEwJYJhlCnJiuI1zeWCYZQhapJiKwGDXvqnsQHbq6UjZYMCr35bZieG2zHWAYXNj85DBldY6DH2l
        VcR/DdAk9h5lSHhZkGKzBDEPceSbfwjYmy8g4xZewu7heMM8lQ36ECGEEEIIIYQQQgghhBBCCCGEEEII
        aQyRP46uE+2oQTrpAAAAAElFTkSuQmCC
</value>
  </data>
</root>