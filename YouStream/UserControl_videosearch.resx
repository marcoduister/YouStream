<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Thumbnail.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BAEAQBAEAQBAEAQBAEAQBAEAQBAEAQBAEAQH/9k=
</value>
  </data>
</root>